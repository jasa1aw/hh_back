version: '3.8'

services:
  postgresdb:
    image: postgres
    restart: unless-stopped
    env_file: ./.env
    environment:
      - POSTGRES_USER=${POSTGRESDB_USER}
      - POSTGRES_PASSWORD=${POSTGRESDB_ROOT_PASSWORD}
      - POSTGRES_DB=${POSTGRESDB_DATABASE}
    ports:
      - ${POSTGRESDB_LOCAL_PORT}:${POSTGRESDB_DOCKER_PORT}
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRESDB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    restart: unless-stopped
    env_file: ./.env
    ports:
      - "6868:6868"
    environment:
      - DB_HOST=postgresdb
      - DB_USER=${POSTGRESDB_USER}
      - DB_PASSWORD=${POSTGRESDB_ROOT_PASSWORD}
      - DB_NAME=${POSTGRESDB_DATABASE}
      - DB_PORT=${POSTGRESDB_DOCKER_PORT}
    stdin_open: true
    tty: true
    depends_on:
      - postgresdb
      - migrate
      - seed
    volumes:
      - .:/app

  migrate:
    image: node:18
    working_dir: /app
    volumes:
      - .:/app
    command: ["npx", "sequelize-cli", "db:migrate"]
    depends_on:
      - postgresdb
    environment:
      - DB_HOST=postgresdb
      - DB_USER=${POSTGRESDB_USER}
      - DB_PASSWORD=${POSTGRESDB_ROOT_PASSWORD}
      - DB_NAME=${POSTGRESDB_DATABASE}
      - DB_PORT=${POSTGRESDB_DOCKER_PORT}

  seed:
    image: node:18
    working_dir: /app
    volumes:
      - .:/app
    command: ["npx", "sequelize-cli", "db:seed:all"]
    depends_on:
      - postgresdb
      - migrate
    environment:
      - DB_HOST=postgresdb
      - DB_USER=${POSTGRESDB_USER}
      - DB_PASSWORD=${POSTGRESDB_ROOT_PASSWORD}
      - DB_NAME=${POSTGRESDB_DATABASE}
      - DB_PORT=${POSTGRESDB_DOCKER_PORT}

volumes:
  db:
